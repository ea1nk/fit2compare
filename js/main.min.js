function parseFitdata(t){var e;return easyFit.parse(t,function(t,a){t?(console.log("Error!"),e={error:!0}):(console.log(JSON.stringify(a)),e=JSON.stringify(a))}),e}function initializeChartPwr(t){var e=document.getElementById("pwrGraph"),a=e.getContext("2d");chartPwr=new Chart(a,{type:"line",data:{datasets:[{label:"1",borderColor:"rgb(204, 230, 255)",borderWidth:1,pointRadius:0,data:[]},{label:"2",borderColor:"rgb(255, 238, 204)",borderWidth:1,pointRadius:0,data:[]}]},options:{responsive:!1,maintainAspectRatio:!0,title:{display:!0,text:t,position:"bottom",padding:5,fontSize:10,fontColor:"#FFF",fontStyle:"bold"},scales:{xAxes:[{gridLines:{display:!0,color:"#666"},type:"time",distribution:"linear",time:{format:"HH:mm",unit:"minute",stepSize:5}}],yAxes:[{gridLines:{display:!0,color:"#666"}}]},tooltips:{mode:"index",intersect:!1},hover:{mode:"index",intersect:!1}}})}function initializeChartHR(t){var e=document.getElementById("hrGraph"),a=e.getContext("2d");chartHR=new Chart(a,{type:"line",data:{datasets:[{label:"1",borderColor:"rgb(204, 230, 255)",borderWidth:1,pointRadius:0,data:[]},{label:"2",borderColor:"rgb(255, 238, 204)",borderWidth:1,pointRadius:0,data:[]}]},options:{responsive:!1,maintainAspectRatio:!0,title:{display:!0,text:t,position:"bottom",padding:5,fontSize:10,fontColor:"#FFF",fontStyle:"bold"},scales:{xAxes:[{gridLines:{display:!0,color:"#666"},type:"time",distribution:"linear",time:{format:"HH:mm",unit:"minute",stepSize:5}}],yAxes:[{gridLines:{display:!0,color:"#666"}}]},tooltips:{mode:"index",intersect:!1},hover:{mode:"index",intersect:!1}}})}function initializeChartCad(t){var e=document.getElementById("cadenceGraph"),a=e.getContext("2d");chartCad=new Chart(a,{type:"line",data:{datasets:[{label:"1",borderColor:"rgb(204, 230, 255)",borderWidth:1,pointRadius:0,data:[]},{label:"2",borderColor:"rgb(255, 238, 204)",borderWidth:1,pointRadius:0,data:[]}]},options:{responsive:!1,maintainAspectRatio:!0,title:{display:!0,text:t,position:"bottom",padding:5,fontSize:10,fontColor:"#FFF",fontStyle:"bold"},scales:{xAxes:[{gridLines:{display:!0,color:"#666"},type:"time",distribution:"linear",time:{format:"HH:mm",unit:"minute",stepSize:5}}],yAxes:[{gridLines:{display:!0,color:"#666"}}]},tooltips:{mode:"index",intersect:!1},hover:{mode:"index",intersect:!1}}})}function printPower(t){var e;t=JSON.parse(t);let a=[],i=[],s=[],r=[],o=[],n=[],d=[],l=t.file_id.manufacturer,c=t.activity.sessions[0].laps[0].records;c.forEach(t=>{if(e)if(moment(t.timestamp).diff(e,"seconds")<=3)o.push(t.power),n.push(t.heart_rate),d.push(t.cadence);else{var l=calcMed(o),c=calcMed(n),p=calcMed(d);a.push({x:new Date(e.format()).getTime(),y:l}),i.push({x:new Date(e.format()).getTime(),y:c}),s.push({x:new Date(e.format()).getTime(),y:p}),r.push({tsmp:new Date(e.format()).getTime(),pwr:l,hr:c,cad:p}),o=[],n=[],d=[],e=moment(t.timestamp)}else e=moment(t.timestamp)}),0==chartPwr.data.datasets[0].data.length?(chartPwr.data.datasets[0].label=l,chartHR.data.datasets[0].label=l,chartCad.data.datasets[0].label=l,chartPwr.data.datasets[0].data=a,chartHR.data.datasets[0].data=i,chartCad.data.datasets[0].data=s,xlsBuffer[0]=r,jsonData[0]=t):(chartPwr.data.datasets[1].label=l,chartPwr.data.datasets[1].data=a,chartHR.data.datasets[1].label=l,chartCad.data.datasets[1].label=l,xlsBuffer[1]=r,jsonData[1]=t),chartPwr.update(),chartPwr.render(),chartHR.update(),chartHR.render(),chartCad.update(),chartCad.render()}function fillResume(t){t=JSON.parse(t),console.log(t);var e=$("#file_resume_table").clone();$(e).attr("id","a").appendTo("#resume_container"),$(e).find("span[id='fileName']").text(" File: "+auxFileName),t.file_id.manufacturer&&$(e).find("span[id='device']").text(t.file_id.manufacturer),t.file_id.time_created&&$(e).find("span[id='date']").text(moment(t.file_id.time_created).format("YYYY-MM-DD HH:mm:ss")),$(e).find("span[id='distance']").text(t.activity.sessions[0].total_distance+"Km");var a=moment.duration(t.activity.sessions[0].total_elapsed_time,"seconds"),i=a.format("HH:mm:ss");$(e).find("span[id='elapsed']").text(i),t.activity.sessions[0].avg_power&&$(e).find("span[id='avgPwr']").text(t.activity.sessions[0].avg_power+" W"),t.activity.sessions[0].max_power&&$(e).find("span[id='maxPwr']").text(t.activity.sessions[0].max_power+" W"),t.activity.sessions[0].avg_heart_rate&&$(e).find("span[id='avgHr']").text(t.activity.sessions[0].avg_heart_rate+" bpm"),t.activity.sessions[0].max_heart_rate&&$(e).find("span[id='maxHr']").text(t.activity.sessions[0].max_heart_rate+" bpm"),t.activity.sessions[0].avg_cadence&&$(e).find("span[id='avgCadence']").text(t.activity.sessions[0].avg_cadence+" rpm"),t.activity.sessions[0].max_cadence&&$(e).find("span[id='maxCadence']").text(t.activity.sessions[0].max_cadence+" rpm"),t.activity.sessions[0].normalized_power&&$(e).find("span[id='normalizedPwr']").text(t.activity.sessions[0].normalized_power),t.activity.sessions[0].total_calories&&$(e).find("span[id='calories']").text(t.activity.sessions[0].total_calories+"Kcal"),$(e).removeAttr("hidden")}function exportJPEG(t){var e=["","pwrGraph","hrGraph","cadenceGraph"],a=document.getElementById(e[t]),i=a.toDataURL("image/jpeg",1),s=dataURItoBlob(i);saveAs(s,"pwr2compare_"+e[t]+".jpg")}function exportJSON(t){var e=jsonData[t-1];console.log(e);var a=new Blob([JSON.stringify(e)],{type:"application/json;charset=utf-8"});saveAs(a,"pwr2compare_JSON_"+t+".json")}async function createXLS(){const t=new ExcelJS.Workbook;var e=Object.keys(xlsBuffer);for(i=0;i<e.length;i++){const e=t.addWorksheet("File "+(i+1));e.columns=[{header:"TIMESTAMP",key:"a",width:"20"},{header:"POWER",key:"b",width:"20"},{header:"HEART RATE",key:"c",width:"20"},{header:"CADENCE",key:"d",width:"20"}];var a=createXLSData(xlsBuffer[i]);e.addRows(a)}const s=await t.xlsx.writeBuffer();saveAs(new Blob([s]),"pwr2compare.xlsx")}function createXLSData(t){var e=[];return t.forEach(t=>{e.push({a:t.tsmp,b:t.pwr,c:t.hr,d:t.cad})}),e}function calcMed(t){var e=t.length,a=0;return t.forEach(t=>{a+=t}),Math.ceil(a/e)}function dataURItoBlob(t){for(var e=atob(t.split(",")[1]),a=t.split(",")[0].split(":")[1].split(";")[0],i=new ArrayBuffer(e.length),s=new Uint8Array(i),r=0;r<e.length;r++)s[r]=e.charCodeAt(r);var o=new Blob([i],{type:a});return o}var EasyFit=require("EasyFit").default,easyFit=new EasyFit({force:!0,speedUnit:"km/h",lengthUnit:"km",temperatureUnit:"kelvin",elapsedRecordField:!0,mode:"cascade"});